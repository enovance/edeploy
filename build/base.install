#!/bin/bash
#
# Copyright (C) 2013 eNovance SAS <licensing@enovance.com>
#
# Author: Frederic Lepied <frederic.lepied@enovance.com>
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may
# not use this file except in compliance with the License. You may obtain
# a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations
# under the License.

dir="$1"
dist="$2"
version="$3"

ROLE=base

ORIG=$(cd $(dirname $0); pwd)

. common

check_binary() {
	type -p $1 || fatal_error "$1 is missing"
}

init_redhat_chroot() {
    local target=$1
    local release_rpm_url=$2
    local dist=$3
    local rpm_repository="$REPOSITORY"
    local next_repository=""

    if [ "$(dist)" = "redhat" ] && [ -z $REPOSITORY ] && [ -z $ISO_PATH ];then
        fatal_error "You must set your repository in the variable REPOSITORY or the ISO path in the ISO_PATH variable."
    fi

    # If the ISO_PATH is set it means the repo is mounted in loopback
    if [ ! -z "$ISO_PATH" ]; then
        rpm_repository="file://${target}/repo"
        next_repository="file:///repo"
    fi

    if [ ! -f "${target}/etc/redhat-release" ]; then
        rpm --initdb --root="$target"
        rpm -ivh --root "$target" "$release_rpm_url"
    fi
    case "$dist" in
        "centos")
            sed -i 's/$releasever/6/g' ${target}/etc/yum.repos.d/*
            ;;
        "redhat")
            sed "0,/^enabled=/ s/enabled=0/enabled=1/" -i ${target}/etc/yum.repos.d/rhel-source.repo
            sed "0,/^baseurl=/ s/baseurl=.*/baseurl=${rpm_repository//\//\\/}/" -i ${target}/etc/yum.repos.d/rhel-source.repo
            ;;
    esac
    cp -f /etc/resolv.conf "$target/etc/"
    rebuild_db_with_local $target
    rpm --root="$target" --import $target/etc/pki/rpm-gpg/RPM-GPG-KEY-*
    # We cannot use install_packages since the basesystem isn't yet setup
    yum --installroot $target install -y basesystem yum

    rebuild_db $target

    case "$dist" in
        "redhat")
            if [ ! -z "$next_repository" ]; then
                sed "0,/^baseurl=/ s/baseurl=.*/baseurl=${next_repository//\//\\/}/" -i ${target}/etc/yum.repos.d/rhel-source.repo
            fi
         ;;
    esac
}

bootstrap() {
    target=$1

    local repository=$(add_main_repository $dist)

    mount_fs
    # Use debootstrap for debian based distribution
    if [ "$(package_type)" = "deb" ]; then
        debootstrap --arch ${ARCH:=amd64} --variant=minbase $dist "$target" $repository
        # workaround no signature downloaded
        rm -f "$target"/var/lib/apt/lists/*[es]
        update_repositories $target
        cp -p ${ORIG}/policy-rc.d ${target}/usr/sbin/
        echo 'APT::Install-Recommends "0" ;' >> "$target/etc/apt/apt.conf"
        echo 'APT::Install-Suggests "0" ;' >> "$target/etc/apt/apt.conf"
    else if [ "$(package_type)" = "rpm" ]; then
            if [ "$(package_tool)" = "yum" ]; then
                check_binary yum
                check_binary rpm

                case $dist in
                    centos|redhat)
                        init_redhat_chroot $target $repository $dist
                        ;;
                    *)
                        fatal_error "Unsupported RPM+YUM based distro: ${DIST}"
                esac
                cp ${target}/etc/skel/.bashrc ${target}/root
                cp ${target}/etc/skel/.bash_profile ${target}/root
            else
                fatal_error "$(package_tool) is not supported for $DIST distro"
            fi
        fi
    fi
    clean_mount_points
}

install_base_packages() {
    target=$1
    # Resolv.conf got setup during the initial deboostrap
    # But since, you might have change your host to another network (office vs home vs mobile vs ...)
    # In such case, the resolv.conf is wrong and prevents apt (and all networking-depedent stuff from working)
    # So let's copy the current one to insure the setup is good
    cp -f /etc/resolv.conf "$target/etc/"
    local packages=""
    local cross_distro_packages="pciutils rsyslog lvm2"
    local deb_packages=" wget sudo locales openssh-server parted net-tools isc-dhcp-client grub-pc kbd rsync ifupdown lshw netbase dmidecode bash curl acpid ifenslave kexec-tools lsb-release"
    local repository=$(add_main_repository $dist)
    case $dist in
        precise)
            packages="$cross_distro_packages linux-image-generic-lts-raring linux-headers-generic-lts-raring iputils-ping linux-firmware grub2 $deb_packages"
            echo "deb $repository precise main" > ${target}/etc/apt/sources.list
            echo "deb $repository precise-updates main" >> ${target}/etc/apt/sources.list
            echo "deb $repository precise universe" >> ${target}/etc/apt/sources.list
            echo "deb $repository precise-updates universe" >> ${target}/etc/apt/sources.list
            echo "deb http://security.ubuntu.com/ubuntu precise-security main" >> ${target}/etc/apt/sources.list
            echo "deb http://security.ubuntu.com/ubuntu precise-security universe" >> ${target}/etc/apt/sources.list
            ;;
        wheezy)
            packages="$cross_distro_packages linux-image-amd64 ipmitool libui-dialog-perl htop acpi-support-base inetutils-ping firmware-bnx2 $deb_packages"
            echo "deb $repository wheezy non-free" > ${target}/etc/apt/sources.list.d/nonfree.list
            echo "deb http://security.debian.org/ wheezy/updates main" >  ${target}/etc/apt/sources.list.d/updates.list
            echo "deb $repository wheezy-updates main" >> ${target}/etc/apt/sources.list.d/updates.list
            ;;
        centos|redhat)
            packages="$cross_distro_packages passwd kernel redhat-lsb-core wget sudo openssh-server parted coreutils perl e2fsprogs net-tools initscripts upstart vconfig dhclient grub grubby kbd rsync dmidecode bash curl hdparm acpid pciutils module-init-tools iproute"
            ;;
        *)
            echo "unsupported distribution: $dist" 2>&1
            exit 1
            ;;
    esac

    rebuild_db $target
    update_repositories $target
    upgrade_system $target
    if [ "$(package_type)" = "deb" ]; then
        mkdir -p "${target}"/etc/default/grub.d
        echo 'exit 0' > "${target}"/etc/default/grub.d/edeploy.cfg
        install_packages $target "$packages"
        echo  "en_US.utf8 UTF-8" >> $target/etc/locale.gen
        echo  'LANG=en_US.UTF-8' > $target/etc/default/locale
        do_chroot "$target" locale-gen
        rm -f "${target}"/etc/default/grub.d/edeploy.cfg
    else if [ "$(package_type)" = "rpm" ]; then
            install_packages $target "$packages"
         fi
    fi
}

install_hp_raid_cli_tool() {
    target=$1
    # Inject HP RAID CLI tool
    if [ "$(package_type)" = "deb" ]; then
        local package_name=hpacucli_9.40.1-1._amd64.deb
        if [ ! -r $target/tmp/$package_name ]; then
            wget --no-verbose http://downloads.linux.hp.com/SDR/downloads/MCP/pool/non-free/$package_name -O $target/tmp/$package_name
        fi
        install_packages $target "python-pexpect"
        do_chroot $target dpkg -i /tmp/$package_name
        rm -f $target/tmp/$package_name
    elif [ "$(package_type)" = "rpm" ]; then
        install_packages $target "pexpect"
        if [ ! -f "$target/usr/sbin/hpacucli" ]; then
            install_packages $target \
                http://downloads.linux.hp.com/SDR/downloads/ServicePackforProLiant/2013.02.0/hp/swpackages/hpacucli-9.40-12.0.x86_64.rpm
        fi
    else
        fatal_error "package_type $(package_type) isn't suported in install_hp_raid_cli_tool()"
    fi
    clear_packages_cache $target
}

ssh_fix() {
    target=$1
    # let the key be generated on first boot
    rm -f "$target"/etc/ssh/*key*
    if [ "$(package_type)" = "deb" ]; then
        cat > ${target}/etc/first-boot.d/01-ssh <<EOF
#!/bin/bash

export DEBIAN_FRONTEND=noninteractive
dpkg-reconfigure openssh-server
EOF
        chmod 755 ${target}/etc/first-boot.d/01-ssh
    fi
}

set_firstboot() {
    target=$1
    mkdir -p ${target}/etc/first-boot.d
    [ -f ${target}/etc/rc.local.REAL ] || cp -p ${target}/etc/rc.local ${target}/etc/rc.local.REAL
    cat > ${target}/etc/rc.local <<EOF
#!/bin/bash

set -e

mv /etc/rc.local.REAL /etc/rc.local

touch /var/log/first-boot.d.log
chmod 0600 /var/log/first-boot.d.log

echo -n "Running first boot scripts..."
run-parts /etc/first-boot.d >> /var/log/first-boot.d.log 2>&1
echo done

exit 0
EOF
    chmod 755 ${target}/etc/rc.local
}

clean_tmp_dir() {
    target=$1
    rm -rf ${target}/var/tmp/* ${target}/tmp/*
    clear_packages_cache $target
}

install_edeploy_bin() {
    target=$1
    mkdir -p "$target/var/lib/edeploy/${version}"
    cp -p ${ORIG}/edeploy ${target}/usr/sbin/
    cp ${ORIG}/base.exclude "$target/var/lib/edeploy/${version}/exclude"
}

############################
########## MAIN ############
############################

if [ -z "$1" -o -z "$dist" -o -z "$version" ]; then
   echo "Usage: $0 <directory name> <distro name>" 1>&2
   exit 1
fi

check_variables

check_binary wget
check_binary debootstrap
check_binary chroot
check_binary sed

uname -m | grep -q 'i[3-6]86'
if [ $? -eq 0 ]; then
    echo "eDeploy is not supported on 32bit OS"
    echo "Exiting"
    exit 1
fi

set -e              # abort on failure
set -x              # print commands

if [ "$(package_type)" = "deb" ]; then
    export DEBIAN_FRONTEND=noninteractive
fi

trap cleanup 0
bootstrap $dir
common_setup
install_base_packages $dir
install_hp_raid_cli_tool $dir
set_firstboot $dir
ssh_fix $dir
install_edeploy_bin $dir
clean_tmp_dir $dir

echo -e "root\nroot"|chroot "$dir" passwd

# Ubuntu specific
if [ $dist = precise ]; then
    sed -i 's/#GRUB_TERMINAL=console/GRUB_TERMINAL=console/' ${dir}/etc/default/grub
    sed -i 's/GRUB_CMDLINE_LINUX_DEFAULT=.*/GRUB_CMDLINE_LINUX_DEFAULT=/' ${dir}/etc/default/grub
fi
